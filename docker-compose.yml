version: '3.8'

services:
  # Aplicação FinMec
  finmec:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finmec-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Database
      - DATABASE_URL=${DATABASE_URL}

      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}

      # Uazapi WhatsApp
      - UAZAPI_BASE_URL=${UAZAPI_BASE_URL}
      - UAZAPI_TOKEN=${UAZAPI_TOKEN}

      # Application
      - APP_NAME=${APP_NAME:-FinMec}
      - APP_VERSION=${APP_VERSION:-1.0.0}
      - DEBUG=${DEBUG:-False}
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8000}

      # Security
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}

      # N8n Webhooks
      - N8N_WEBHOOK_BASE_URL=${N8N_WEBHOOK_BASE_URL}

    volumes:
      # Persistir logs
      - ./logs:/app/logs

    networks:
      - finmec-network

    depends_on:
      - postgres

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL (Opcional - use se quiser banco local)
  # Comente esta seção se já tem PostgreSQL externo
  postgres:
    image: postgres:16-alpine
    container_name: finmec-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=finmec
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-finmec_password_change_me}
    ports:
      - "5432:5432"
    volumes:
      # Persistir dados do banco
      - postgres-data:/var/lib/postgresql/data
    networks:
      - finmec-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  finmec-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
