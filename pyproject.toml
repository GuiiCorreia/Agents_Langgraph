[project]
name = "finmec"
version = "1.0.0"
description = "Sistema de gestão financeira via WhatsApp com FastAPI, LangGraph e IA"
requires-python = ">=3.12"

dependencies = [
    # FastAPI and ASGI server
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.31.0",
    "pydantic>=2.9.0",
    "pydantic-settings>=2.5.0",

    # Database
    "sqlalchemy>=2.0.35",
    "psycopg2-binary>=2.9.9",
    "alembic>=1.13.3",

    # Authentication and Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.12",

    # AI Integrations
    "openai>=1.51.0",
    "google-generativeai>=0.8.0",

    # LangChain & LangGraph for Agent Orchestration
    "langgraph>=0.2.28",
    "langchain>=0.3.1",
    "langchain-openai>=0.2.1",
    "langchain-google-genai>=2.0.0",
    "langchain-core>=0.3.6",

    # HTTP Client
    "httpx>=0.27.2",
    "requests>=2.32.3",

    # Environment variables
    "python-dotenv>=1.0.1",

    # Data manipulation
    "pandas>=2.2.3",
    "numpy>=2.1.2",

    # Charts and visualization
    "matplotlib>=3.9.2",
    "pillow>=10.4.0",

    # Date and time
    "python-dateutil>=2.9.0",

    # Task scheduling
    "apscheduler>=3.10.4",

    # Utilities
    "typing-extensions>=4.12.2",

    # Logging
    "loguru>=0.7.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.3",
    "black>=23.12.1",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "ipython>=8.12.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
# Configurações do uv
dev-dependencies = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.3",
    "black>=23.12.1",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
]

[tool.uv.sources]
# Usar PyPI como fonte principal

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.eggs
  | \.mypy_cache
  | \.pytest_cache
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true